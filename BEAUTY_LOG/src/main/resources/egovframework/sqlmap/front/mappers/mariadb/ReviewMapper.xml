<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="egovframework.beauty.front.service.mapper.ReviewMapper">

    <!-- 리뷰 목록 조회 (페이징 처리) -->
    <select id="list" parameterType="egovframework.beauty.front.model.ReviewVO" resultType="egovframework.beauty.front.model.ReviewVO">
        SELECT 
            r.prdSn,
            r.prdNm,
            r.prdDesc,
            ROUND(AVG(r.rating), 1) AS rating,  
            COUNT(*) AS reviewCount
        FROM tb_review r
        GROUP BY r.prdSn, r.prdNm, r.prdDesc
        ORDER BY MAX(r.regDate) DESC
        LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
    </select>

    <!-- 리뷰 목록 개수 (특정 제품에 대한 리뷰 개수) -->
    <select id="listCnt" parameterType="long" resultType="int">
        SELECT COUNT(*) 
        FROM tb_review
        WHERE prdSn = #{prdSn}
    </select>

    <!-- 리뷰 수 업데이트 (제품의 리뷰 개수 업데이트) -->
    <update id="updateReviewCount" parameterType="long">
        UPDATE tb_product
        SET reviewCount = (
            SELECT COUNT(*) 
            FROM tb_review 
            WHERE prdSn = #{prdSn}
        )
        WHERE PRD_SN = #{prdSn}
    </update>

    <!-- 상품명-->
    <select id="selectProductNameBySn" parameterType="long" resultType="string">
        SELECT prd_nm FROM tb_product WHERE prd_sn = #{prdSn}
    </select>
  
    <!-- 상품설명 -->
    <select id="selectProductDescriptionBySn" parameterType="long" resultType="string">
        SELECT prd_desc FROM tb_product WHERE prd_sn = #{prdSn}
    </select>
    
    <!-- 리뷰 추가 -->
    <insert id="add" parameterType="egovframework.beauty.front.model.ReviewVO">
        INSERT INTO tb_review (
            prdSn, prdNm, prdDesc, rating, writer, content, userSn
        ) VALUES (
            #{prdSn}, #{prdNm}, #{prdDesc}, #{rating}, #{writer}, #{content}, #{userSn}
        )
    </insert>
 
    <!-- 제품 번호로 리뷰 조회 -->
    <select id="selectReviewsByProduct" parameterType="long" resultType="egovframework.beauty.front.model.ReviewVO">
        SELECT 
            r.reviewSn,
            r.prdSn,
            r.prdNm,
            r.prdDesc,
            ROUND(r.rating, 1) AS rating,
            r.writer,
            r.content,
            r.regDate,
            u.userName AS writerName,
            u.userId AS writerId
        FROM tb_review r
        LEFT JOIN tb_user u ON r.userSn = u.userSn
        WHERE r.prdSn = #{prdSn}
        ORDER BY r.regDate DESC
    </select>

    <!-- 전체 평균 별점 계산 -->
    <select id="getAverageRating" parameterType="long" resultType="double">
        SELECT ROUND(AVG(rating), 1) AS averageRating
        FROM tb_review
        WHERE prdSn = #{prdSn}
    </select>

    <!-- 리뷰 삭제 -->
    <delete id="delete" parameterType="long">
        DELETE FROM tb_review
        WHERE reviewSn = #{reviewSn}
    </delete>

    <!-- 제품명으로 리뷰 검색 -->
<select id="searchByProductName" parameterType="string" resultType="egovframework.beauty.front.model.ReviewVO">
    SELECT 
        r.prdSn,
        r.prdNm,
        r.prdDesc,
        ROUND(AVG(r.rating), 1) AS rating,
        COUNT(*) AS reviewCount
    FROM tb_review r
    WHERE r.prdNm LIKE CONCAT('%', #{prdNm}, '%')
    GROUP BY r.prdSn, r.prdNm, r.prdDesc
    ORDER BY MAX(r.regDate) DESC
</select>

    <!-- 제품 수정 -->
    <update id="updateProduct" parameterType="egovframework.beauty.front.model.ReviewVO">
        UPDATE tb_product
        SET 
            prd_nm = #{prdNm},
            prd_desc = #{prdDesc}
        WHERE prd_sn = #{prdSn}
    </update>

    <select id="getRankedProducts" resultType="egovframework.beauty.front.model.ReviewVO">
        SELECT 
            p.PRD_SN AS prdSn,
            p.PRD_NM AS prdNm,
            p.PRD_DESC AS prdDesc,
            p.PRD_THUM AS prdImg,
            p.CAPACITY AS capacity,
            p.PRICE AS price,
            ROUND(AVG(r.rating), 1) AS rating,
            COUNT(*) AS reviewCount
        FROM tb_review r
        JOIN tb_product p ON r.prdSn = p.PRD_SN
        GROUP BY p.PRD_SN, p.PRD_NM, p.PRD_DESC, p.PRD_THUM, p.CAPACITY, p.PRICE
        ORDER BY rating DESC
    </select>

    <!-- 제품 이미지 목록 조회 -->
<select id="getProductImagesByPrdSn" parameterType="long" resultType="string">
    SELECT PRD_THUM
    FROM tb_product
    WHERE PRD_SN = #{prdSn}
</select>

</mapper>
